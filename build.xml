<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="Jar" name="OpenPIXPDQAdapter">
    <property file="build.properties" />
    <property name="build.root" location="temp" />
    <property name="dist.root" location="dist" />

    <target name="clean" description="Clean out compiled src">
        <delete failonerror="false" quiet="true" includeEmptyDirs="true">
            <fileset dir="${dist.dir}/lib" />
            <fileset dir="${dist.dir}/conf" />
        </delete>
		<delete file="${dist.dir}/${jar.name}" failonerror="false" quiet="true" />
		<delete failonerror="false" quiet="true" includeEmptyDirs="true">
            <fileset dir="${build.root}" />
            <fileset dir="${dist.root}" />
        </delete>
    </target>


    <target name="compile" depends="init,setClasspath">
        <copy todir="${build.root}">
            <fileset dir="${src.dir}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <javac failonerror="false" debug="true" srcdir="${src.dir}" destdir="${build.root}" classpath="${classpath}" />
    </target>

    <target name="init">
        <mkdir dir="${build.root}" />
        <mkdir dir="${dist.root}" />
    </target>

    <target name="setClasspath">
        <property environment="env" />
        <path id="build.classpath">
            <fileset dir="${lib.src}">
                <include name="*.jar" />
            </fileset>
        </path>
        <property name="classpath" refid="build.classpath" />
        <echo message="Classpath Settings done: ${classpath}" />
    </target>

    <target name="Jar" depends="checkFiles,clean,compile" description="generate Util jar file">

		<!-- Create destination directory for jar file -->
        <jar jarfile="${dist.root}/${jar.name}" basedir="${build.root}" excludes="${to.exclude}" manifest="MANIFEST.MF"/>
        <echo message="Jar Created [${dist.root}/${jar.name}]" />
        <echo message="Deleting temporary directory:[${build.root}]" />
        <copy file="${dist.root}/${jar.name}" todir="${dist.dir}" />
        <copy todir="${dist.dir}/lib">
            <fileset dir="${lib.src}" />
        </copy>
        <copy todir="${dist.dir}/conf">
            <fileset dir="${conf.src}" />
        </copy>
        <delete dir="${build.root}" />
        <delete dir="${dist.root}" />
    </target>

    <target name="checkFiles">
        <fail message="Required Files doesn't exist in the lib folder!" >
            <condition>
                <not>
                    <and>
                        <available file="${lib.src}/axiom-api-1.2.5.jar" />
                        <available file="${lib.src}/axiom-dom-1.2.5.jar" />
                        <available file="${lib.src}/axiom-impl-1.2.5.jar" />
                        <available file="${lib.src}/beepcore.jar" />
                        <available file="${lib.src}/beepsasl.jar" />
                        <available file="${lib.src}/beeptls-jsse.jar" />
                        <available file="${lib.src}/beeptls-ptls.jar" />
                        <available file="${lib.src}/braid-base-1.1.jar" />
                        <available file="${lib.src}/cglib-full-2.0.2.jar" />
                        <available file="${lib.src}/commons-collections-2.1.1.jar" />
                        <available file="${lib.src}/commons-httpclient-3.0.1.jar" />
                        <available file="${lib.src}/commons-logging-1.1.jar" />
                        <available file="${lib.src}/dom4j-1.5.2.jar" />
                        <available file="${lib.src}/ehcache-1.1.jar" />
                        <available file="${lib.src}/hapi-0.5.1.jar" />
                        <available file="${lib.src}/hibernate3.jar" />
                        <available file="${lib.src}/jaxb-api.jar" />
                        <available file="${lib.src}/jaxb-impl.jar" />
                        <available file="${lib.src}/jaxb-libs.jar" />
                        <available file="${lib.src}/jaxb-xjc.jar" />
                        <available file="${lib.src}/jta.jar" />
                        <available file="${lib.src}/junit-3.8.1.jar" />
                        <available file="${lib.src}/log4j-all-1.3alpha-8.jar" />
                        <available file="${lib.src}/mysql-connector-java-5.0.4.jar" />
                        <available file="${lib.src}/OpenPIXPDQ.jar" />
                        <available file="${lib.src}/relaxngDatatype.jar" />
                        <available file="${lib.src}/xsdlib.jar" />
                    </and>
                </not>
            </condition>
        </fail>
    </target>
</project>
